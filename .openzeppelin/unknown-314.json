{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x577AA248DeB2EAaAfDb1137339F367C54cAf9B3d",
      "txHash": "0xbf54c391c61d5f3564e6a7f69d2a7f85ecb2cf855caace28ce591275c5c435cb",
      "kind": "uups"
    },
    {
      "address": "0x3D52874772C66466c93E36cc3782946fd0FA7666",
      "txHash": "0x5611ab09002ab5382686d8583d3132579c5d5e6ffd77c913d44a33b697093039",
      "kind": "uups"
    },
    {
      "address": "0x9B0e598329D12d985F209cC8346090Fc30371a1B",
      "txHash": "0x6b8b2b7d3d951f4aa49b97a39debf4e0c9755070ee7d8cd440df628a436450a5",
      "kind": "uups"
    },
    {
      "address": "0xd0437765D1Dc0e2fA14E97d290F135eFdf1a8a9A",
      "txHash": "0x8325b926f55c1ba79324ecbc88b26057772f3ae94f364ef337edf3b7bb7be8e3",
      "kind": "uups"
    },
    {
      "address": "0x34150FdEd1e598866E5111718e4F5D5af2517f98",
      "txHash": "0x59cbfde6aef3febb082a53a647181d87e690e6639584fd15132099bc621ecdd7",
      "kind": "uups"
    },
    {
      "address": "0x57f5cbca75C410589ae88Fab5ED2e9dA32a0b306",
      "txHash": "0x9b516a6164364798c1a04a2d5c9af70c4745288d0835040fec2af99fb5980bdd",
      "kind": "uups"
    }
  ],
  "impls": {
    "af652e7e88a434cd9273a3ba1528fc7cf4004a45e8a909d1d3e53695a05f4dd8": {
      "address": "0xC5Ef60783Fd1C6e7A6f37537BA3062466bcdc5D1",
      "txHash": "0x988058f85f666a222e9df338a782cbba1606275f85d631bcf5a07146ad44ce26",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_addresses",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "Resolver",
            "src": "contracts/Resolver.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "65bcbe0530866f15b7994cf1f7cf3bbf989895dbf443f0d52f0d02e196d19e64": {
      "address": "0x0F4094F18D00C86f2201aF494B592d1A9B1705Ea",
      "txHash": "0x6b05e4eec7fa22ff14df096fe04787f9d416e7f453adf3b4521afc788772622a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15387_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint64,t_struct(SPCollateral)2495_storage)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:51"
          },
          {
            "label": "slashings",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:54"
          },
          {
            "label": "collateralRequirements",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:56"
          },
          {
            "label": "activeSlashings",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint64,t_bool)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:59"
          },
          {
            "label": "baseRequirements",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:64"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(IResolverClient)6057",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:67"
          },
          {
            "label": "WFIL",
            "offset": 0,
            "slot": "307",
            "type": "t_contract(IWFIL)8450",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6057": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_contract(IWFIL)8450": {
            "label": "contract IWFIL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15387_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPCollateral)2495_storage)": {
            "label": "mapping(uint64 => struct StorageProviderCollateral.SPCollateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)15387_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SPCollateral)2495_storage": {
            "label": "struct StorageProviderCollateral.SPCollateral",
            "members": [
              {
                "label": "availableCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockedCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dae13302f3a54ee65c297d6381076b62c207a82462c91341f23d4579be5f7889": {
      "address": "0x37c8D7Ed062c7068da6184c6482A9f230aDCf51a",
      "txHash": "0xdb5d14feb056f9779be8db77ca6391555d032abafe4a624583129013b9528c92",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15387_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:17"
          },
          {
            "label": "baseProfitShare",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:18"
          },
          {
            "label": "liquidityCap",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:19"
          },
          {
            "label": "withdrawalsActivated",
            "offset": 0,
            "slot": "254",
            "type": "t_bool",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:20"
          },
          {
            "label": "resolver",
            "offset": 1,
            "slot": "254",
            "type": "t_contract(IResolverClient)6057",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:22"
          },
          {
            "label": "profitShares",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6057": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15387_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)15387_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3068ad641c2d83385d20cbb315e4bf469cef3d57acbe84edf114775607b87e5e": {
      "address": "0x47c14daDE9D16e963af745BBaD6f86a0424760eB",
      "txHash": "0xed79a7dbf24997833ac1f11578b0e52362f97994fce4e5d3d225a54b1dc9f4be",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:45"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:47"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:49"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:401"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)17505",
            "contract": "ERC4626Upgradeable",
            "src": "contracts/libraries/tokens/ERC4626Upgradeable.sol:56"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "contracts/libraries/tokens/ERC4626Upgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "contracts/libraries/tokens/ERC4626Upgradeable.sol:292"
          },
          {
            "label": "WFIL",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IWFIL)8450",
            "contract": "ClFILToken",
            "src": "contracts/ClFIL.sol:15"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15387_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "totalFilPledged",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "LiquidStaking",
            "src": "contracts/LiquidStaking.sol:53"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IResolverClient)6057",
            "contract": "LiquidStaking",
            "src": "contracts/LiquidStaking.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)17505": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IResolverClient)6057": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_contract(IWFIL)8450": {
            "label": "contract IWFIL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15387_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)15387_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1475c62e5f8da1e0512d0ab6c848e886db8884e278174a72ecdcf8739a8b1848": {
      "address": "0x87F102415df0Eb6E57291D678185eC42b1a21C90",
      "txHash": "0x4fd230b1ed5fbef9e45450b6aca4aa687d662c6703054e3caccbab16320a1c1b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15387_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "storageProviders",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint64,t_struct(StorageProvider)8464_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:59"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint64,t_struct(SPAllocation)8477_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:62"
          },
          {
            "label": "restakings",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint64,t_struct(SPRestaking)8482_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:65"
          },
          {
            "label": "allocationRequests",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint64,t_struct(AllocationRequest)8487_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:68"
          },
          {
            "label": "sectorSizes",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint64,t_uint64)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:71"
          },
          {
            "label": "dailyUsages",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:74"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:77"
          },
          {
            "label": "syncedBeneficiary",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint64,t_bool)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:80"
          },
          {
            "label": "minerIds",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint64,t_struct(UintSet)20163_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:83"
          },
          {
            "label": "maxAllocation",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:87"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(IResolverClient)6057",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6057": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_int64": {
            "label": "int64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15387_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(AllocationRequest)8487_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.AllocationRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPAllocation)8477_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.SPAllocation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPRestaking)8482_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.SPRestaking)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(StorageProvider)8464_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.StorageProvider)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(UintSet)20163_storage)": {
            "label": "mapping(uint64 => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint64)": {
            "label": "mapping(uint64 => uint64)",
            "numberOfBytes": "32"
          },
          "t_struct(AllocationRequest)8487_storage": {
            "label": "struct StorageProviderTypes.AllocationRequest",
            "members": [
              {
                "label": "allocationLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dailyAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)15387_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SPAllocation)8477_storage": {
            "label": "struct StorageProviderTypes.SPAllocation",
            "members": [
              {
                "label": "allocationLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "repayment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dailyAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accruedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "repaidPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SPRestaking)8482_storage": {
            "label": "struct StorageProviderTypes.SPRestaking",
            "members": [
              {
                "label": "restakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "restakingAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19691_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StorageProvider)8464_storage": {
            "label": "struct StorageProviderTypes.StorageProvider",
            "members": [
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "onboarded",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "targetPool",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "ownerId",
                "type": "t_uint64",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "lastEpoch",
                "type": "t_int64",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)20163_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19691_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c67f5b9eba0fe46e3aa9902629661e7d5c424094f9feda81a0430f6aa7dc66bf": {
      "address": "0xAfF50E1dabDA629A0F08De122e3f44837370Db8b",
      "txHash": "0x49c4739f30bf19f389652808c5acc112c76b779e2badb92af6a883278ce33f09",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)16123_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IResolverClient)6793",
            "contract": "RewardCollector",
            "src": "contracts/RewardCollector.sol:44"
          },
          {
            "label": "WFIL",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IWFIL)9186",
            "contract": "RewardCollector",
            "src": "contracts/RewardCollector.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6793": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_contract(IWFIL)9186": {
            "label": "contract IWFIL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)16123_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)16123_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "af2485a2c1d1f646ff7dc9abdd7f3ea63aeaf5f2badcbbce6093bf0ef47ac45b": {
      "address": "0xA3a70163Edc8C119B73Ea6cA184CCD589A5f9b7a",
      "txHash": "0x86a214cbee7812d55b86387762d4e7b4bceec5bffd68e77973eb5001ef4d5437",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)16123_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IResolverClient)6793",
            "contract": "RewardCollectorV2",
            "src": "contracts/RewardCollectorV2.sol:44"
          },
          {
            "label": "WFIL",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IWFIL)9186",
            "contract": "RewardCollectorV2",
            "src": "contracts/RewardCollectorV2.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6793": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_contract(IWFIL)9186": {
            "label": "contract IWFIL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)16123_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)16123_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
