{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x80fE18b436314b7C8b68D4a981e9e9D6ad3d2D3c",
      "txHash": "0x907999acb07cd2f274459815c3884ebd071bb0b48ac3d81bd89a8cebba36e4ef",
      "kind": "uups"
    },
    {
      "address": "0x80891C4e1D6042AD47c262439dc0aFf1612465B0",
      "txHash": "0x050f1984e2e4a5233a96ed80dedcc8a66865839d9dd696f5235bcbc541fc37ab",
      "kind": "uups"
    }
  ],
  "impls": {
    "5725477be9d7c16507a8979ce167d649e256c68ce128e3153f05da0febeade47": {
      "address": "0x0CEda67c55238681eFDe2eD5247a5c816abEcDA8",
      "txHash": "0x272b74165280da2376a73b26cb01e93ed9c1bc6e45419a07c3192ddbe969614e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13088_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "storageProviders",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint64,t_struct(StorageProvider)6165_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:35"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint64,t_struct(SPAllocation)6178_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:38"
          },
          {
            "label": "restakings",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint64,t_struct(SPRestaking)6183_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:41"
          },
          {
            "label": "allocationRequests",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint64,t_struct(AllocationRequest)6188_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:44"
          },
          {
            "label": "sectorSizes",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint64,t_uint64)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:47"
          },
          {
            "label": "dailyUsages",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:50"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:53"
          },
          {
            "label": "maxAllocation",
            "offset": 0,
            "slot": "308",
            "type": "t_uint256",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:57"
          },
          {
            "label": "collateral",
            "offset": 0,
            "slot": "309",
            "type": "t_contract(IStorageProviderCollateralClient)5386",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IStorageProviderCollateralClient)5386": {
            "label": "contract IStorageProviderCollateralClient",
            "numberOfBytes": "20"
          },
          "t_int64": {
            "label": "int64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13088_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(AllocationRequest)6188_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.AllocationRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPAllocation)6178_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.SPAllocation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPRestaking)6183_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.SPRestaking)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(StorageProvider)6165_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.StorageProvider)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint64)": {
            "label": "mapping(uint64 => uint64)",
            "numberOfBytes": "32"
          },
          "t_struct(AllocationRequest)6188_storage": {
            "label": "struct StorageProviderTypes.AllocationRequest",
            "members": [
              {
                "label": "allocationLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dailyAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)13088_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SPAllocation)6178_storage": {
            "label": "struct StorageProviderTypes.SPAllocation",
            "members": [
              {
                "label": "allocationLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "repayment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dailyAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accruedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "repaidPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SPRestaking)6183_storage": {
            "label": "struct StorageProviderTypes.SPRestaking",
            "members": [
              {
                "label": "restakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "restakingAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StorageProvider)6165_storage": {
            "label": "struct StorageProviderTypes.StorageProvider",
            "members": [
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "onboarded",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "targetPool",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "minerId",
                "type": "t_uint64",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "lastEpoch",
                "type": "t_int64",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f3f67921931c696030b51d07f8904f8c7df0c567fab365b5a3e3afb75122c4fb": {
      "address": "0xa954BF4dD890496f4623cFd27fC522f32AE20E50",
      "txHash": "0xd6af6c40a6b3f1361f88744c05f05961d69e358c031effe01e7568116a5cd95c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)13088_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:197"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint64,t_struct(SPCollateral)2213_storage)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:40"
          },
          {
            "label": "slashings",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:43"
          },
          {
            "label": "collateralRequirements",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:45"
          },
          {
            "label": "baseRequirements",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:49"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(IStorageProviderRegistryClient)5764",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:51"
          },
          {
            "label": "WFIL",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(IWFIL)6151",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IStorageProviderRegistryClient)5764": {
            "label": "contract IStorageProviderRegistryClient",
            "numberOfBytes": "20"
          },
          "t_contract(IWFIL)6151": {
            "label": "contract IWFIL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)13088_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPCollateral)2213_storage)": {
            "label": "mapping(uint64 => struct StorageProviderCollateral.SPCollateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)13088_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SPCollateral)2213_storage": {
            "label": "struct StorageProviderCollateral.SPCollateral",
            "members": [
              {
                "label": "availableCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockedCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
