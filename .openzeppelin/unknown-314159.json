{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x92e42443702a835Dba4103D568959Db89F150715",
      "txHash": "0x522161e1dc5e3bbdc853e3b01f23793b13de8a8d69286bfe898d3731e20026b0",
      "kind": "uups"
    },
    {
      "address": "0xf03bcBd21bcb4E8560EE525445cAd527D9FA13Af",
      "txHash": "0x15cc26ee6ed9959cd23784c4a302cc3fab20bd446ba9ccb03eb0954b41ce14a1",
      "kind": "uups"
    },
    {
      "address": "0x3A4329CC60462a9DE5767D6245AFE237e12eB73b",
      "txHash": "0xb1aeba195745e00fb0bdc00449ed8a10d59c4c9bbe31992d8ae6702a4ea007e4",
      "kind": "uups"
    },
    {
      "address": "0x945d2B61CB6f5f46B1DF749489e8480eAa6d4fF2",
      "txHash": "0x13a3076bfd725ca9f73aaef0c9136967c9d00e511cd6bb7024675477eb135cd6",
      "kind": "uups"
    },
    {
      "address": "0x90c0f425D840b744e4722a5F1EFAeBF6b61fc8e6",
      "txHash": "0x36add22aa4891bd2de9ad679c782df82229a20f87b931a7a5023dd4df679e229",
      "kind": "uups"
    },
    {
      "address": "0xbeF694D61fe94f03F1e6a49e06b9b948E0a57876",
      "txHash": "0xd8c69bb343fa77115f5446d3e2b46e0b99e154435fb7b2e7197962d1e7b09c31",
      "kind": "uups"
    }
  ],
  "impls": {
    "af652e7e88a434cd9273a3ba1528fc7cf4004a45e8a909d1d3e53695a05f4dd8": {
      "address": "0x24B0747364fff4F3928F8D8BA87093180fc0a4bE",
      "txHash": "0xefc7d66ff38e16ca612f717ca85c694267e35b7582b50bc9a0df520d19287c95",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_addresses",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "Resolver",
            "src": "contracts/Resolver.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "65bcbe0530866f15b7994cf1f7cf3bbf989895dbf443f0d52f0d02e196d19e64": {
      "address": "0xF5Ac17fD8BAF7aF03Fb58DF739fD41d40fD9c315",
      "txHash": "0xb7efc86c5f244ae95498c6b23324b00bc11ad28eec885d11b5d1ecf9852f09e3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint64,t_struct(SPCollateral)2521_storage)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:51"
          },
          {
            "label": "slashings",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:54"
          },
          {
            "label": "collateralRequirements",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint64,t_uint256)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:56"
          },
          {
            "label": "activeSlashings",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint64,t_bool)",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:59"
          },
          {
            "label": "baseRequirements",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:64"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(IResolverClient)6083",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:67"
          },
          {
            "label": "WFIL",
            "offset": 0,
            "slot": "307",
            "type": "t_contract(IWFIL)8476",
            "contract": "StorageProviderCollateral",
            "src": "contracts/StorageProviderCollateral.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6083": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_contract(IWFIL)8476": {
            "label": "contract IWFIL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPCollateral)2521_storage)": {
            "label": "mapping(uint64 => struct StorageProviderCollateral.SPCollateral)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)15413_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SPCollateral)2521_storage": {
            "label": "struct StorageProviderCollateral.SPCollateral",
            "members": [
              {
                "label": "availableCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockedCollateral",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dae13302f3a54ee65c297d6381076b62c207a82462c91341f23d4579be5f7889": {
      "address": "0x2A98dcC3AB484e616A3D083F4439e784c1147545",
      "txHash": "0xac3ccd94eb08cb6786a738e663415e04a078bc453783a8f55ec414b4f8efa6d0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "adminFee",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:17"
          },
          {
            "label": "baseProfitShare",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:18"
          },
          {
            "label": "liquidityCap",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:19"
          },
          {
            "label": "withdrawalsActivated",
            "offset": 0,
            "slot": "254",
            "type": "t_bool",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:20"
          },
          {
            "label": "resolver",
            "offset": 1,
            "slot": "254",
            "type": "t_contract(IResolverClient)6083",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:22"
          },
          {
            "label": "profitShares",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "LiquidStakingController",
            "src": "contracts/LiquidStakingController.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6083": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)15413_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3068ad641c2d83385d20cbb315e4bf469cef3d57acbe84edf114775607b87e5e": {
      "address": "0x04e1Dd02c1A6d720dA2266F27caB74829bb67EEE",
      "txHash": "0xa94c65f93d91111f45e52c6761d3844cf7b2decc0af8a5cd09455cc86a4d37b2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:45"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:47"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:49"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/libraries/tokens/ERC20Upgradeable.sol:401"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)17531",
            "contract": "ERC4626Upgradeable",
            "src": "contracts/libraries/tokens/ERC4626Upgradeable.sol:56"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "contracts/libraries/tokens/ERC4626Upgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "contracts/libraries/tokens/ERC4626Upgradeable.sol:292"
          },
          {
            "label": "WFIL",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IWFIL)8476",
            "contract": "ClFILToken",
            "src": "contracts/ClFIL.sol:15"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "totalFilPledged",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "LiquidStaking",
            "src": "contracts/LiquidStaking.sol:53"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "403",
            "type": "t_contract(IResolverClient)6083",
            "contract": "LiquidStaking",
            "src": "contracts/LiquidStaking.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)17531": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IResolverClient)6083": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_contract(IWFIL)8476": {
            "label": "contract IWFIL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)15413_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1475c62e5f8da1e0512d0ab6c848e886db8884e278174a72ecdcf8739a8b1848": {
      "address": "0xBCA4BA0593E13200d7ba9342B0e0E5df467E1485",
      "txHash": "0xfeba673a9132c19991ffe01f4e2e9df9816985511fa10efd011237f2022d2ae6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "storageProviders",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_uint64,t_struct(StorageProvider)8490_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:59"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint64,t_struct(SPAllocation)8503_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:62"
          },
          {
            "label": "restakings",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint64,t_struct(SPRestaking)8508_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:65"
          },
          {
            "label": "allocationRequests",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint64,t_struct(AllocationRequest)8513_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:68"
          },
          {
            "label": "sectorSizes",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint64,t_uint64)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:71"
          },
          {
            "label": "dailyUsages",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:74"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:77"
          },
          {
            "label": "syncedBeneficiary",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint64,t_bool)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:80"
          },
          {
            "label": "minerIds",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint64,t_struct(UintSet)20189_storage)",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:83"
          },
          {
            "label": "maxAllocation",
            "offset": 0,
            "slot": "310",
            "type": "t_uint256",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:87"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "311",
            "type": "t_contract(IResolverClient)6083",
            "contract": "StorageProviderRegistry",
            "src": "contracts/StorageProviderRegistry.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6083": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_int64": {
            "label": "int64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bool)": {
            "label": "mapping(uint64 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(AllocationRequest)8513_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.AllocationRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPAllocation)8503_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.SPAllocation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(SPRestaking)8508_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.SPRestaking)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(StorageProvider)8490_storage)": {
            "label": "mapping(uint64 => struct StorageProviderTypes.StorageProvider)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(UintSet)20189_storage)": {
            "label": "mapping(uint64 => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_uint64)": {
            "label": "mapping(uint64 => uint64)",
            "numberOfBytes": "32"
          },
          "t_struct(AllocationRequest)8513_storage": {
            "label": "struct StorageProviderTypes.AllocationRequest",
            "members": [
              {
                "label": "allocationLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dailyAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)15413_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SPAllocation)8503_storage": {
            "label": "struct StorageProviderTypes.SPAllocation",
            "members": [
              {
                "label": "allocationLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "repayment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dailyAllocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accruedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "repaidPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SPRestaking)8508_storage": {
            "label": "struct StorageProviderTypes.SPRestaking",
            "members": [
              {
                "label": "restakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "restakingAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)19717_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StorageProvider)8490_storage": {
            "label": "struct StorageProviderTypes.StorageProvider",
            "members": [
              {
                "label": "active",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "onboarded",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "targetPool",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "ownerId",
                "type": "t_uint64",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "lastEpoch",
                "type": "t_int64",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)20189_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)19717_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c67f5b9eba0fe46e3aa9902629661e7d5c424094f9feda81a0430f6aa7dc66bf": {
      "address": "0xab3e8Bc97D824B476220EAb80D02D1F62923D6Ed",
      "txHash": "0x02eabf45328367d6f43ba9f3802088d2cf62a7480c0dfda0c7470f53f1c9612b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "resolver",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IResolverClient)6083",
            "contract": "RewardCollector",
            "src": "contracts/RewardCollector.sol:44"
          },
          {
            "label": "WFIL",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IWFIL)8476",
            "contract": "RewardCollector",
            "src": "contracts/RewardCollector.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IResolverClient)6083": {
            "label": "contract IResolverClient",
            "numberOfBytes": "20"
          },
          "t_contract(IWFIL)8476": {
            "label": "contract IWFIL",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)15413_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)15413_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
